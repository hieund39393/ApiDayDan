// <auto-generated />
using System;
using Authentication.Infrastructure.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Authentication.Infrastructure.Migrations
{
    [DbContext(typeof(ExOneDbContext))]
    [Migration("20230722170813_Add_NC2_3")]
    partial class Add_NC2_3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AAuthentication.Infrastructure.AggregatesModel.DM_BieuGia.DM_BieuGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<string>("MaBieuGia")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenBieuGia")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.Property<Guid?>("idLoaiBieuGia")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("idLoaiBieuGia");

                    b.ToTable("DM_BieuGia", (string)null);
                });

            modelBuilder.Entity("AAuthentication.Infrastructure.AggregatesModel.DM_BieuGia.DM_BieuGia_CapNgam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<string>("MaBieuGia")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenBieuGia")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.Property<Guid?>("idLoaiBieuGia")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("idLoaiBieuGia");

                    b.ToTable("DM_BieuGia_CapNgam", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.ActionsAggregate.Actions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<string>("ActionCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ActionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("Cờ xóa");

                    b.Property<string>("MenuCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MenuName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.ToTable("AUTH_Action", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.BieuGiaCongViecAggregate.BieuGiaCongViec", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<bool>("CongViecChinh")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<Guid?>("IdBieuGia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdCongViec")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<int>("ThuTuHienThi")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.HasIndex("IdBieuGia");

                    b.HasIndex("IdCongViec");

                    b.ToTable("BieuGiaCongViec", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.BieuGiaCongViecAggregate.BieuGiaCongViec_CapNgam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<bool>("CongViecChinh")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<Guid?>("IdBieuGia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdCongViec")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<int>("PhanLoai")
                        .HasColumnType("int");

                    b.Property<int>("ThuTuHienThi")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.HasIndex("IdBieuGia");

                    b.HasIndex("IdCongViec");

                    b.ToTable("BieuGiaCongViec_CapNgam", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.BieuGiaTongHopAggregate.BieuGiaTongHop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("DonGia2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DonGia3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("IdBieuGia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<int>("Nam")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayXacNhan")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NguoiXacNhan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quy")
                        .HasColumnType("int");

                    b.Property<int>("TinhTrang")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.HasIndex("IdBieuGia");

                    b.ToTable("BieuGiaTongHop", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.BieuGiaTongHopAggregate.BieuGiaTongHop_CapNgam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("DonGia2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DonGia3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("IdBieuGia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<int>("Nam")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayXacNhan")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NguoiXacNhan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quy")
                        .HasColumnType("int");

                    b.Property<int>("TinhTrang")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.HasIndex("IdBieuGia");

                    b.ToTable("BieuGiaTongHop_CapNgam", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.CauHinhAggregate.CauHinhBieuGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<string>("GiaTri")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<int>("Nam")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PhanLoaiCap")
                        .HasColumnType("int");

                    b.Property<int>("Quy")
                        .HasColumnType("int");

                    b.Property<string>("TenCauHinh")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.ToTable("CauHinhBieuGia", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.ChiTietBieuGiaAggregate.ChiTietBieuGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<decimal>("DonGia_MTC")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("DonGia_NC")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("DonGia_VL")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("HeSoDieuChinh_K1nc")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("HeSoDieuChinh_K2nc")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("HeSoDieuChinh_Kmtc")
                        .HasColumnType("numeric(18,2)");

                    b.Property<Guid?>("IDBieuGia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDCongViec")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<int>("Nam")
                        .HasColumnType("int");

                    b.Property<int>("Quy")
                        .HasColumnType("int");

                    b.Property<decimal>("SoLuong")
                        .HasColumnType("numeric(18,2)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.HasIndex("IDBieuGia");

                    b.HasIndex("IDCongViec");

                    b.ToTable("ChiTietBieuGia", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.ChiTietBieuGiaAggregate.ChiTietBieuGia_CapNgam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<decimal>("DonGia_MTC")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("DonGia_NC")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("DonGia_VL")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("HeSoDieuChinh_K1nc")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("HeSoDieuChinh_K2nc")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("HeSoDieuChinh_Kmtc")
                        .HasColumnType("numeric(18,2)");

                    b.Property<Guid?>("IDBieuGia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDCongViec")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<int>("Nam")
                        .HasColumnType("int");

                    b.Property<int>("Quy")
                        .HasColumnType("int");

                    b.Property<decimal>("SoLuong")
                        .HasColumnType("numeric(18,2)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.HasIndex("IDBieuGia");

                    b.HasIndex("IDCongViec");

                    b.ToTable("ChiTietBieuGia_CapNgam", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_CongViecAggregate.DM_CongViec", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<string>("DonViTinh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<string>("MaCongViec")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenCongViec")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.ToTable("DM_CongViec", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_CongViecAggregate.DM_CongViec_CapNgam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<string>("DonViTinh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<string>("MaCongViec")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenCongViec")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.ToTable("DM_CongViec_CapNgam", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_KhuVucAggregate.DM_KhuVuc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<string>("TenKhuVuc")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.ToTable("DM_KhuVuc", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_LoaiBieuGiaAggregate.DM_LoaiBieuGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<Guid?>("IdKhuVuc")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<string>("MaLoaiBieuGia")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenLoaiBieuGia")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.HasIndex("IdKhuVuc");

                    b.ToTable("DM_LoaiBieuGia", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_LoaiBieuGiaAggregate.DM_LoaiBieuGia_CapNgam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<Guid?>("IdKhuVuc")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<string>("MaLoaiBieuGia")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenLoaiBieuGia")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.HasIndex("IdKhuVuc");

                    b.ToTable("DM_LoaiBieuGia_CapNgam", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_LoaiCapAggregate.DM_LoaiCap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<string>("DonViTinh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<string>("MaLoaiCap")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenLoaiCap")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.ToTable("DM_LoaiCap", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_LoaiCapAggregate.DM_LoaiCap_CapNgam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<string>("DonViTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("Cờ xóa");

                    b.Property<string>("MaLoaiCap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLoaiCap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.Property<int>("VungKhuVuc")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DM_LoaiCap_CapNgam");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_MTCAggregate.DM_MTC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<string>("DonViTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<string>("MaMTC")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenMayThiCong")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.ToTable("DM_MTC", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_MTCAggregate.DM_MTC_CapNgam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<string>("DonViTinh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<string>("MaMTC")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenMTC")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.ToTable("DM_MTC_CapNgam", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_NhanCongAggregate.DM_NhanCong", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<string>("CapBac")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<string>("HeSo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("IdKhuVuc")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.HasIndex("IdKhuVuc");

                    b.ToTable("DM_NhanCong", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_NhanCongAggregate.DM_NhanCong_CapNgam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<string>("CapBac")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<string>("HeSo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("IdKhuVuc")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.HasIndex("IdKhuVuc");

                    b.ToTable("DM_NhanCong_CapNgam", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_VatLieuAggregate.DM_VatLieu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<string>("DonViTinh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<string>("MaVatLieu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenVatLieu")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.ToTable("DM_VatLieu", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_VatLieuAggregate.DM_VatLieu_CapNgam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<string>("DonViTinh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<string>("MaVatLieu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenVatLieu")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.ToTable("DM_VatLieu_CapNgam", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DonGiaChietTinhAggregate.CauHinhChietTinh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<Guid?>("IdChiTiet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdCongViec")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<int>("PhanLoai")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.HasIndex("IdCongViec");

                    b.ToTable("CauHinhChietTinh", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DonGiaChietTinhAggregate.CauHinhChietTinh_CapNgam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<Guid?>("IdChiTiet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdCongViec")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<int>("PhanLoai")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.Property<int>("VungKhuVuc")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCongViec");

                    b.ToTable("CauHinhChietTinh_CapNgam", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DonGiaChietTinhAggregate.DonGiaChietTinh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<decimal?>("DonGiaMTC")
                        .HasColumnType("numeric(18,1)");

                    b.Property<decimal?>("DonGiaNhanCong")
                        .HasColumnType("numeric(18,1)");

                    b.Property<decimal?>("DonGiaVatLieu")
                        .HasColumnType("numeric(18,1)");

                    b.Property<Guid?>("IdCongViec")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.HasIndex("IdCongViec");

                    b.ToTable("DonGiaChietTinh", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DonGiaChietTinhAggregate.DonGiaChietTinh_CapNgam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<Guid?>("DM_CongViec_CapNgamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("DonGiaMTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DonGiaNhanCong")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DonGiaVatLieu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IdCongViec")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("Cờ xóa");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.Property<int>("VungKhuVuc")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DM_CongViec_CapNgamId");

                    b.ToTable("DonGiaChietTinh_CapNgam");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DonGiaNhanCongAggregate.DonGiaNhanCong", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<decimal?>("DinhMuc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DinhMucCu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("numeric(18,1)");

                    b.Property<decimal?>("DonGiaCu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IdNhanCong")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.HasIndex("IdNhanCong");

                    b.ToTable("DonGiaNhanCong", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DonGiaNhanCongAggregate.DonGiaNhanCong_CapNgam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<decimal?>("DinhMuc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DinhMucCu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("numeric(18,1)");

                    b.Property<decimal?>("DonGiaCu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IdNhanCong")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.Property<int>("VungKhuVuc")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdNhanCong");

                    b.ToTable("DonGiaNhanCong_CapNgam", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DonGiaVatLieuAggregate.DonGiaMTC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<decimal?>("DinhMuc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DinhMucCu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("numeric(18,1)");

                    b.Property<decimal?>("DonGiaCu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IdMTC")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.Property<string>("VanBan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdMTC");

                    b.ToTable("DonGiaMTC", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DonGiaVatLieuAggregate.DonGiaMTC_CapNgam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<decimal?>("DinhMuc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DinhMucCu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("numeric(18,1)");

                    b.Property<decimal?>("DonGiaCu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IdMTC")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.Property<string>("VanBan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VungKhuVuc")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdMTC");

                    b.ToTable("DonGiaMTC_CapNgam", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DonGiaVatLieuAggregate.DonGiaVatLieu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<decimal?>("DinhMuc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DinhMucCu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("numeric(18,1)");

                    b.Property<decimal?>("DonGiaCu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IdVatLieu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.Property<string>("VanBan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdVatLieu");

                    b.ToTable("DonGiaVatLieu", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DonGiaVatLieuAggregate.DonGiaVatLieu_CapNgam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<decimal?>("DinhMuc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DinhMucCu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("numeric(18,1)");

                    b.Property<decimal?>("DonGiaCu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IdVatLieu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.Property<string>("VanBan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VungKhuVuc")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdVatLieu");

                    b.ToTable("DonGiaVatLieu_CapNgam", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.GiaCapAggregate.GiaCap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("numeric(18,1)");

                    b.Property<Guid?>("IdLoaiCap")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.Property<string>("VanBan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdLoaiCap");

                    b.ToTable("DonGiaCap", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.GiaCapAggregate.GiaCap_CapNgam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("numeric(18,1)");

                    b.Property<Guid?>("IdLoaiCap")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.Property<string>("VanBan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VungKhuVuc")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdLoaiCap");

                    b.ToTable("DonGiaCap_CapNgam", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.LogAggregate.SystemLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Exception")
                        .HasComment("Ngoại lệ");

                    b.Property<string>("IP")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("IP")
                        .HasComment("Địa chỉ IP");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Level")
                        .HasComment("Mức độ lỗi");

                    b.Property<string>("LogEvent")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LogEvent");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Message")
                        .HasComment("Chi tiết lỗi");

                    b.Property<string>("MessageTemplate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MessageTemplate")
                        .HasComment("Chi tiết lỗi");

                    b.Property<string>("Properties")
                        .HasColumnType("xml")
                        .HasColumnName("Properties");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("TimeStamp");

                    b.Property<string>("UserName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("UserName")
                        .HasComment("Tên user");

                    b.HasKey("Id");

                    b.ToTable("SystemLogs", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.MenuAggregate.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid?>("ParenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.HasIndex("ParenId");

                    b.ToTable("AUTH_Menu", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.ModuleAggregate.Module", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.ToTable("AUTH_Module", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.PermissionAggregate.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("Cờ xóa");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("MenuId");

                    b.ToTable("AUTH_Permission", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.PositionAggregate.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("Cờ xóa");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AUTH_Position");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<int?>("Index")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("Cờ xóa");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("ModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AUTH_Roles", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AUTH_RoleClaims", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("Cờ xóa");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id bảng, khóa chính");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người tạo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày tạo");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("Cờ xóa");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Mã người cập nhật");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày cập nhật");

                    b.HasKey("Id");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("Actived")
                        .HasColumnType("bit")
                        .HasComment("Cờ kích hoạt");

                    b.Property<string>("Avatar")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Ảnh đại diện");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2")
                        .HasComment("Ngày sinh");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("bit")
                        .HasComment("Cờ superadmin");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Tên người dùng");

                    b.Property<string>("NameUnsigned")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("Tên người dùng không dấu");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid?>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("SSO")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(56)
                        .HasColumnType("nvarchar(56)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Email");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PositionId");

                    b.HasIndex("RoleId");

                    b.HasIndex("TeamId");

                    b.HasIndex("UnitId");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("AUTH_Users", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AUTH_UserClaims", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ProviderDisplayName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AUTH_UserLogins", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("AUTH_UserRoles", (string)null);
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.UserToken", b =>
                {
                    b.Property<string>("Value")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<Guid?>("CreatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Value");

                    b.HasIndex("UserId");

                    b.ToTable("AUTH_UserTokens", (string)null);
                });

            modelBuilder.Entity("AAuthentication.Infrastructure.AggregatesModel.DM_BieuGia.DM_BieuGia", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_LoaiBieuGiaAggregate.DM_LoaiBieuGia", "DM_LoaiBieuGia")
                        .WithMany("DM_BieuGia")
                        .HasForeignKey("idLoaiBieuGia");

                    b.Navigation("DM_LoaiBieuGia");
                });

            modelBuilder.Entity("AAuthentication.Infrastructure.AggregatesModel.DM_BieuGia.DM_BieuGia_CapNgam", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_LoaiBieuGiaAggregate.DM_LoaiBieuGia_CapNgam", "DM_LoaiBieuGia_CapNgam")
                        .WithMany("DM_BieuGia_CapNgam")
                        .HasForeignKey("idLoaiBieuGia");

                    b.Navigation("DM_LoaiBieuGia_CapNgam");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.BieuGiaCongViecAggregate.BieuGiaCongViec", b =>
                {
                    b.HasOne("AAuthentication.Infrastructure.AggregatesModel.DM_BieuGia.DM_BieuGia", "DM_BieuGia")
                        .WithMany("BieuGiaCongViec")
                        .HasForeignKey("IdBieuGia");

                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_CongViecAggregate.DM_CongViec", "DM_CongViec")
                        .WithMany("BieuGiaCongViec")
                        .HasForeignKey("IdCongViec");

                    b.Navigation("DM_BieuGia");

                    b.Navigation("DM_CongViec");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.BieuGiaCongViecAggregate.BieuGiaCongViec_CapNgam", b =>
                {
                    b.HasOne("AAuthentication.Infrastructure.AggregatesModel.DM_BieuGia.DM_BieuGia_CapNgam", "DM_BieuGia_CapNgam")
                        .WithMany("BieuGiaCongViec_CapNgam")
                        .HasForeignKey("IdBieuGia");

                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_CongViecAggregate.DM_CongViec_CapNgam", "DM_CongViec_CapNgam")
                        .WithMany("BieuGiaCongViec_CapNgam")
                        .HasForeignKey("IdCongViec");

                    b.Navigation("DM_BieuGia_CapNgam");

                    b.Navigation("DM_CongViec_CapNgam");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.BieuGiaTongHopAggregate.BieuGiaTongHop", b =>
                {
                    b.HasOne("AAuthentication.Infrastructure.AggregatesModel.DM_BieuGia.DM_BieuGia", "DM_BieuGia")
                        .WithMany("BieuGiaTongHop")
                        .HasForeignKey("IdBieuGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DM_BieuGia");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.BieuGiaTongHopAggregate.BieuGiaTongHop_CapNgam", b =>
                {
                    b.HasOne("AAuthentication.Infrastructure.AggregatesModel.DM_BieuGia.DM_BieuGia_CapNgam", "DM_BieuGia_CapNgam")
                        .WithMany("BieuGiaTongHop_CapNgam")
                        .HasForeignKey("IdBieuGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DM_BieuGia_CapNgam");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.ChiTietBieuGiaAggregate.ChiTietBieuGia", b =>
                {
                    b.HasOne("AAuthentication.Infrastructure.AggregatesModel.DM_BieuGia.DM_BieuGia", "DM_BieuGia")
                        .WithMany("ChiTietBieuGia")
                        .HasForeignKey("IDBieuGia");

                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_CongViecAggregate.DM_CongViec", "DM_CongViec")
                        .WithMany("ChiTietBieuGia")
                        .HasForeignKey("IDCongViec");

                    b.Navigation("DM_BieuGia");

                    b.Navigation("DM_CongViec");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.ChiTietBieuGiaAggregate.ChiTietBieuGia_CapNgam", b =>
                {
                    b.HasOne("AAuthentication.Infrastructure.AggregatesModel.DM_BieuGia.DM_BieuGia_CapNgam", "DM_BieuGia_CapNgam")
                        .WithMany("ChiTietBieuGia_CapNgam")
                        .HasForeignKey("IDBieuGia");

                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_CongViecAggregate.DM_CongViec_CapNgam", "DM_CongViec_CapNgam")
                        .WithMany("ChiTietBieuGia_CapNgam")
                        .HasForeignKey("IDCongViec");

                    b.Navigation("DM_BieuGia_CapNgam");

                    b.Navigation("DM_CongViec_CapNgam");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_LoaiBieuGiaAggregate.DM_LoaiBieuGia", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_KhuVucAggregate.DM_KhuVuc", "DM_KhuVuc")
                        .WithMany("DM_LoaiBieuGia")
                        .HasForeignKey("IdKhuVuc");

                    b.Navigation("DM_KhuVuc");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_LoaiBieuGiaAggregate.DM_LoaiBieuGia_CapNgam", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_KhuVucAggregate.DM_KhuVuc", "DM_KhuVuc")
                        .WithMany("DM_LoaiBieuGia_CapNgam")
                        .HasForeignKey("IdKhuVuc");

                    b.Navigation("DM_KhuVuc");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_NhanCongAggregate.DM_NhanCong", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_KhuVucAggregate.DM_KhuVuc", "KhuVuc")
                        .WithMany("DM_NhanCong")
                        .HasForeignKey("IdKhuVuc");

                    b.Navigation("KhuVuc");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_NhanCongAggregate.DM_NhanCong_CapNgam", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_KhuVucAggregate.DM_KhuVuc", "KhuVuc")
                        .WithMany("DM_NhanCong_CapNgam")
                        .HasForeignKey("IdKhuVuc");

                    b.Navigation("KhuVuc");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DonGiaChietTinhAggregate.CauHinhChietTinh", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_CongViecAggregate.DM_CongViec", "DM_CongViec")
                        .WithMany("CauHinhChietTinhs")
                        .HasForeignKey("IdCongViec");

                    b.Navigation("DM_CongViec");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DonGiaChietTinhAggregate.CauHinhChietTinh_CapNgam", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_CongViecAggregate.DM_CongViec_CapNgam", "DM_CongViec_CapNgam")
                        .WithMany("CauHinhChietTinh_CapNgams")
                        .HasForeignKey("IdCongViec");

                    b.Navigation("DM_CongViec_CapNgam");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DonGiaChietTinhAggregate.DonGiaChietTinh", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_CongViecAggregate.DM_CongViec", "DM_CongViec")
                        .WithMany("DonGiaChietTinhs")
                        .HasForeignKey("IdCongViec");

                    b.Navigation("DM_CongViec");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DonGiaChietTinhAggregate.DonGiaChietTinh_CapNgam", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_CongViecAggregate.DM_CongViec_CapNgam", "DM_CongViec_CapNgam")
                        .WithMany("DonGiaChietTinh_CapNgams")
                        .HasForeignKey("DM_CongViec_CapNgamId");

                    b.Navigation("DM_CongViec_CapNgam");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DonGiaNhanCongAggregate.DonGiaNhanCong", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_NhanCongAggregate.DM_NhanCong", "NhanCong")
                        .WithMany("DonGiaNhanCong")
                        .HasForeignKey("IdNhanCong");

                    b.Navigation("NhanCong");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DonGiaNhanCongAggregate.DonGiaNhanCong_CapNgam", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_NhanCongAggregate.DM_NhanCong_CapNgam", "NhanCong_CapNgam")
                        .WithMany("DonGiaNhanCong_CapNgam")
                        .HasForeignKey("IdNhanCong");

                    b.Navigation("NhanCong_CapNgam");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DonGiaVatLieuAggregate.DonGiaMTC", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_MTCAggregate.DM_MTC", "DM_MTC")
                        .WithMany("DonGiaMTC")
                        .HasForeignKey("IdMTC");

                    b.Navigation("DM_MTC");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DonGiaVatLieuAggregate.DonGiaMTC_CapNgam", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_MTCAggregate.DM_MTC_CapNgam", "DM_MTC_CapNgam")
                        .WithMany("DonGiaMTC_CapNgam")
                        .HasForeignKey("IdMTC");

                    b.Navigation("DM_MTC_CapNgam");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DonGiaVatLieuAggregate.DonGiaVatLieu", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_VatLieuAggregate.DM_VatLieu", "DM_VatLieu")
                        .WithMany("DonGiaVatLieu")
                        .HasForeignKey("IdVatLieu");

                    b.Navigation("DM_VatLieu");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DonGiaVatLieuAggregate.DonGiaVatLieu_CapNgam", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_VatLieuAggregate.DM_VatLieu_CapNgam", "DM_VatLieu_CapNgam")
                        .WithMany("DonGiaVatLieu_CapNgam")
                        .HasForeignKey("IdVatLieu");

                    b.Navigation("DM_VatLieu_CapNgam");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.GiaCapAggregate.GiaCap", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_LoaiCapAggregate.DM_LoaiCap", "DM_LoaiCap")
                        .WithMany("GiaCap")
                        .HasForeignKey("IdLoaiCap");

                    b.Navigation("DM_LoaiCap");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.GiaCapAggregate.GiaCap_CapNgam", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.DM_LoaiCapAggregate.DM_LoaiCap_CapNgam", "DM_LoaiCap_CapNgam")
                        .WithMany("GiaCap_CapNgam")
                        .HasForeignKey("IdLoaiCap");

                    b.Navigation("DM_LoaiCap_CapNgam");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.MenuAggregate.Menu", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.ModuleAggregate.Module", "Module")
                        .WithMany("Menus")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Authentication.Infrastructure.AggregatesModel.MenuAggregate.Menu", null)
                        .WithMany("Menus")
                        .HasForeignKey("ParenId");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.PermissionAggregate.Permission", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.MenuAggregate.Menu", "Menu")
                        .WithMany("Permissions")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.Role", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.ModuleAggregate.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.RoleClaim", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.UserAggregate.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.User", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.UserAggregate.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Authentication.Infrastructure.AggregatesModel.PositionAggregate.Position", "Position")
                        .WithMany("Users")
                        .HasForeignKey("PositionId");

                    b.HasOne("Authentication.Infrastructure.AggregatesModel.UserAggregate.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("Authentication.Infrastructure.AggregatesModel.UserAggregate.Team", "Team")
                        .WithMany("Users")
                        .HasForeignKey("TeamId");

                    b.HasOne("Authentication.Infrastructure.AggregatesModel.UserAggregate.Unit", "Unit")
                        .WithMany("Users")
                        .HasForeignKey("UnitId");

                    b.Navigation("Department");

                    b.Navigation("Position");

                    b.Navigation("Role");

                    b.Navigation("Team");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.UserClaim", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.UserAggregate.User", "User")
                        .WithMany("UserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.UserLogin", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.UserAggregate.User", "User")
                        .WithMany("UserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.UserRole", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.UserAggregate.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Authentication.Infrastructure.AggregatesModel.UserAggregate.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.UserToken", b =>
                {
                    b.HasOne("Authentication.Infrastructure.AggregatesModel.UserAggregate.User", "User")
                        .WithMany("UserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AAuthentication.Infrastructure.AggregatesModel.DM_BieuGia.DM_BieuGia", b =>
                {
                    b.Navigation("BieuGiaCongViec");

                    b.Navigation("BieuGiaTongHop");

                    b.Navigation("ChiTietBieuGia");
                });

            modelBuilder.Entity("AAuthentication.Infrastructure.AggregatesModel.DM_BieuGia.DM_BieuGia_CapNgam", b =>
                {
                    b.Navigation("BieuGiaCongViec_CapNgam");

                    b.Navigation("BieuGiaTongHop_CapNgam");

                    b.Navigation("ChiTietBieuGia_CapNgam");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_CongViecAggregate.DM_CongViec", b =>
                {
                    b.Navigation("BieuGiaCongViec");

                    b.Navigation("CauHinhChietTinhs");

                    b.Navigation("ChiTietBieuGia");

                    b.Navigation("DonGiaChietTinhs");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_CongViecAggregate.DM_CongViec_CapNgam", b =>
                {
                    b.Navigation("BieuGiaCongViec_CapNgam");

                    b.Navigation("CauHinhChietTinh_CapNgams");

                    b.Navigation("ChiTietBieuGia_CapNgam");

                    b.Navigation("DonGiaChietTinh_CapNgams");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_KhuVucAggregate.DM_KhuVuc", b =>
                {
                    b.Navigation("DM_LoaiBieuGia");

                    b.Navigation("DM_LoaiBieuGia_CapNgam");

                    b.Navigation("DM_NhanCong");

                    b.Navigation("DM_NhanCong_CapNgam");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_LoaiBieuGiaAggregate.DM_LoaiBieuGia", b =>
                {
                    b.Navigation("DM_BieuGia");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_LoaiBieuGiaAggregate.DM_LoaiBieuGia_CapNgam", b =>
                {
                    b.Navigation("DM_BieuGia_CapNgam");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_LoaiCapAggregate.DM_LoaiCap", b =>
                {
                    b.Navigation("GiaCap");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_LoaiCapAggregate.DM_LoaiCap_CapNgam", b =>
                {
                    b.Navigation("GiaCap_CapNgam");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_MTCAggregate.DM_MTC", b =>
                {
                    b.Navigation("DonGiaMTC");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_MTCAggregate.DM_MTC_CapNgam", b =>
                {
                    b.Navigation("DonGiaMTC_CapNgam");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_NhanCongAggregate.DM_NhanCong", b =>
                {
                    b.Navigation("DonGiaNhanCong");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_NhanCongAggregate.DM_NhanCong_CapNgam", b =>
                {
                    b.Navigation("DonGiaNhanCong_CapNgam");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_VatLieuAggregate.DM_VatLieu", b =>
                {
                    b.Navigation("DonGiaVatLieu");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.DM_VatLieuAggregate.DM_VatLieu_CapNgam", b =>
                {
                    b.Navigation("DonGiaVatLieu_CapNgam");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.MenuAggregate.Menu", b =>
                {
                    b.Navigation("Menus");

                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.ModuleAggregate.Module", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.PositionAggregate.Position", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.Role", b =>
                {
                    b.Navigation("RoleClaims");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.Team", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.Unit", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Authentication.Infrastructure.AggregatesModel.UserAggregate.User", b =>
                {
                    b.Navigation("UserClaims");

                    b.Navigation("UserLogins");

                    b.Navigation("UserRoles");

                    b.Navigation("UserTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
